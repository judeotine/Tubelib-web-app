"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/indexedDb.ts":
/*!**************************!*\
  !*** ./lib/indexedDb.ts ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addVideo: function() { return /* binding */ addVideo; },\n/* harmony export */   deleteMediaBinary: function() { return /* binding */ deleteMediaBinary; },\n/* harmony export */   deleteVideo: function() { return /* binding */ deleteVideo; },\n/* harmony export */   getAllVideos: function() { return /* binding */ getAllVideos; },\n/* harmony export */   getMediaBinary: function() { return /* binding */ getMediaBinary; },\n/* harmony export */   getVideoBinary: function() { return /* binding */ getVideoBinary; },\n/* harmony export */   saveMediaBinary: function() { return /* binding */ saveMediaBinary; },\n/* harmony export */   saveVideoBinary: function() { return /* binding */ saveVideoBinary; }\n/* harmony export */ });\nconst dbName = \"db\";\nconst dbVersion = 1;\nlet db;\nconst videoStoreName = \"video\";\nconst videoBinaryStoreName = \"video_binary\";\nconst openDB = async ()=>{\n    return new Promise((resolve, reject)=>{\n        const request = indexedDB.open(dbName, dbVersion);\n        request.onerror = (event)=>{\n            console.error(\"Error opening database\", event);\n            reject(event);\n        };\n        request.onsuccess = (event)=>{\n            db = event.target.result;\n            resolve(db);\n        };\n        request.onupgradeneeded = (event)=>{\n            db = event.target.result;\n            db.createObjectStore(videoStoreName, {\n                keyPath: \"id\"\n            });\n            db.createObjectStore(videoBinaryStoreName, {\n                keyPath: \"id\"\n            });\n        };\n    });\n};\nconst addVideo = async (video)=>{\n    await openDB();\n    return new Promise((resolve, reject)=>{\n        const transaction = db.transaction([\n            videoStoreName\n        ], \"readwrite\");\n        const objectStore = transaction.objectStore(videoStoreName);\n        const request = objectStore.add(video);\n        request.onsuccess = function() {\n            resolve();\n        };\n        request.onerror = function(event) {\n            reject(event);\n        };\n    });\n};\nconst deleteVideo = async (id)=>{\n    await openDB();\n    return new Promise((resolve, reject)=>{\n        const transaction = db.transaction([\n            videoStoreName\n        ], \"readwrite\");\n        const objectStore = transaction.objectStore(videoStoreName);\n        const request = objectStore.delete(id);\n        request.onsuccess = function() {\n            resolve();\n        };\n        request.onerror = function(event) {\n            reject(event);\n        };\n    });\n};\nconst getAllVideos = async ()=>{\n    await openDB();\n    return new Promise((resolve, reject)=>{\n        const transaction = db.transaction([\n            videoStoreName\n        ], \"readonly\");\n        const objectStore = transaction.objectStore(videoStoreName);\n        const request = objectStore.openCursor();\n        const videoList = [];\n        request.onsuccess = function(event) {\n            const cursor = event.target.result;\n            if (cursor) {\n                const video = cursor.value;\n                videoList.push(video);\n                cursor.continue();\n            } else {\n                resolve(videoList);\n            }\n        };\n        request.onerror = function(event) {\n            reject(event.target.error);\n        };\n    });\n};\nconst saveVideoBinary = async (id, data)=>{\n    await openDB();\n    return new Promise((resolve, reject)=>{\n        const transaction = db.transaction([\n            videoBinaryStoreName\n        ], \"readwrite\");\n        const objectStore = transaction.objectStore(videoBinaryStoreName);\n        const request = objectStore.put({\n            id,\n            data\n        });\n        request.onsuccess = function() {\n            resolve();\n        };\n        request.onerror = function(event) {\n            reject(event);\n        };\n    });\n};\nconst getVideoBinary = async (id)=>{\n    await openDB();\n    return new Promise((resolve, reject)=>{\n        const transaction = db.transaction([\n            videoBinaryStoreName\n        ], \"readonly\");\n        const objectStore = transaction.objectStore(videoBinaryStoreName);\n        const request = objectStore.get(id);\n        request.onsuccess = function(event) {\n            resolve(event.target.result);\n        };\n        request.onerror = function(event) {\n            reject(event);\n        };\n    });\n};\nconst saveMediaBinary = async (id, video, audio)=>{\n    await openDB();\n    return new Promise((resolve, reject)=>{\n        const transaction = db.transaction([\n            videoBinaryStoreName\n        ], \"readwrite\");\n        const objectStore = transaction.objectStore(videoBinaryStoreName);\n        const request = objectStore.put({\n            id,\n            video,\n            audio\n        });\n        request.onsuccess = function() {\n            resolve();\n        };\n        request.onerror = function(event) {\n            reject(event);\n        };\n    });\n};\nconst getMediaBinary = async (id)=>{\n    await openDB();\n    return new Promise((resolve, reject)=>{\n        const transaction = db.transaction([\n            videoBinaryStoreName\n        ], \"readonly\");\n        const objectStore = transaction.objectStore(videoBinaryStoreName);\n        const request = objectStore.get(id);\n        request.onsuccess = function(event) {\n            resolve(event.target.result);\n        };\n        request.onerror = function(event) {\n            reject(event);\n        };\n    });\n};\nconst deleteMediaBinary = async (id)=>{\n    await openDB();\n    return new Promise((resolve, reject)=>{\n        const transaction = db.transaction([\n            videoBinaryStoreName\n        ], \"readwrite\");\n        const objectStore = transaction.objectStore(videoBinaryStoreName);\n        const request = objectStore.delete(id);\n        request.onsuccess = function() {\n            resolve();\n        };\n        request.onerror = function(event) {\n            reject(event);\n        };\n    });\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/indexedDb.ts\n"));

/***/ })

});